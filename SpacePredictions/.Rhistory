eig$values <- eig$values[abs(eig$values) > .Machine$double.eps^0.5]
##
cbind(drw$eig$values, drw$eig$values - 1, eig$values)
drw$eig$values
n
n/sw
drw$eig$values*n/sw
eig$values*n/sw0
eig$values
eig$values*n/sw0
(drw$eig$values-1)
(drw$eig$values-1)*n/sw
(drw$eig$values-1)*n/(sw - n)
eig$values*n/sw0
cbind(Moran = eig$values*n/sw0)
cbind(Moran = eig$values*n/sw0, recalculated = (drw$eig$values - 1)*n/(sw - n))
eig$vectors[,1L]
eig$vectors[,1L]
drw$eig$vectors[,1L]
eig$vectors - drw$eig$vectors
eig$vectors - drw$eig$vectors
eig$vectors + drw$eig$vectors
draw(x, fun1, 0.1, 0.01, wpar = 2*max(diff(x))) -> drw
## draw(x, fun2, 0.1, 0.01, wpar=1/(2*max(diff(x)))) -> drw
## draw(x, fun3, 0.1, 0.01) -> drw
## draw(x, fun4, 0.1, 0.01, wpar = 2*max(diff(x))) -> drw
## draw(x, fun5, 0.1, 0.01, wpar = c(2*max(diff(x)),2)) -> drw
## draw(x, fun6, 0.1, 0.01, wpar=1) -> drw
##
## drw$eig$values
##
## par(mfrow=c(1,1))
m <- c(1,2,3,5)
ylim <- max(abs(drw$eig$vectors[,m]),abs(drw$scr[,m])) * c(-1,1)
par(mfrow=c(4,1), mar=c(4.1,4.1,0.5,0.5))
for(i in m) {
plot(x = drw$ss, y = drw$scr[,i], type = "l", ylim = ylim, las = 1L, ylab="",
xlab="")
points(x = drw$x, y = drw$eig$vectors[,i])
}
##
drw$w -> w
sum(w) -> sw
diag(w) <- 0
sum(w) -> sw0
g <- t(t(w - rowMeans(w)) - colMeans(w)) + mean(w)
eigen(g) -> eig
eig$vectors <- eig$vectors[,abs(eig$values) > .Machine$double.eps^0.5]
eig$values <- eig$values[abs(eig$values) > .Machine$double.eps^0.5]
##
cbind(drw$eig$values, drw$eig$values - 1, eig$values)
drw$eig$values
cbind(Moran = eig$values*n/sw0, recalculated = (drw$eig$values - 1)*n/(sw - n))
eig$vectors - drw$eig$vectors
eig$vectors + drw$eig$vectors
eig$values*n/sw0
draw(x, fun2, 0.1, 0.01, wpar=1/(2*max(diff(x)))) -> drw
## draw(x, fun3, 0.1, 0.01) -> drw
## draw(x, fun4, 0.1, 0.01, wpar = 2*max(diff(x))) -> drw
## draw(x, fun5, 0.1, 0.01, wpar = c(2*max(diff(x)),2)) -> drw
## draw(x, fun6, 0.1, 0.01, wpar=1) -> drw
##
## drw$eig$values
##
## par(mfrow=c(1,1))
m <- c(1,2,3,5)
ylim <- max(abs(drw$eig$vectors[,m]),abs(drw$scr[,m])) * c(-1,1)
par(mfrow=c(4,1), mar=c(4.1,4.1,0.5,0.5))
for(i in m) {
plot(x = drw$ss, y = drw$scr[,i], type = "l", ylim = ylim, las = 1L, ylab="",
xlab="")
points(x = drw$x, y = drw$eig$vectors[,i])
}
##
drw$w -> w
sum(w) -> sw
diag(w) <- 0
sum(w) -> sw0
g <- t(t(w - rowMeans(w)) - colMeans(w)) + mean(w)
eigen(g) -> eig
eig$vectors <- eig$vectors[,abs(eig$values) > .Machine$double.eps^0.5]
eig$values <- eig$values[abs(eig$values) > .Machine$double.eps^0.5]
##
cbind(drw$eig$values, drw$eig$values - 1, eig$values)
drw$eig$values
cbind(Moran = eig$values*n/sw0, recalculated = (drw$eig$values - 1)*n/(sw - n))
eig$vectors - drw$eig$vectors
eig$vectors + drw$eig$vectors
eig$values*n/sw0
cbind(Moran = eig$values*n/sw0, recalculated = (drw$eig$values - 1)*n/(sw - n))
eig$vectors - drw$eig$vectors
eig$vectors + drw$eig$vectors
##
draw <- function(x, fun, ext, by, ..., d0w0 = FALSE,
tol = .Machine$double.eps^0.5) {
d <- dist(x)
w <- as.matrix(d)
w[] <- fun(w[], ...)
if(d0w0)
w[d==0] <- 0
g <- t(t(w - rowMeans(w)) - colMeans(w)) + mean(w)
eigen(g) -> eig
eig$vectors <- eig$vectors[,abs(eig$values) > tol]
eig$values <- eig$values[abs(eig$values) > tol]
##
seq(min(x) - ext, max(x) + ext, by) -> ss
t(sapply(ss, function(x, y) abs(x - y), y = x)) -> dd
ww <- dd
ww[] <- fun(ww[], ...)
if(d0w0)
ww[dd==0] <- 0
gg <- t(t(ww - rowMeans(ww)) - colMeans(w)) + mean(w)
gg %*% eig$vectors %*% diag(eig$values^(-1)) -> scr
##
list(x = x, eig = eig, ss = ss, scr = scr, w = w)
}
##
n <- 10
x <- c(0, cumsum(runif(n - 1L, 0.5, 1.5)))
## x <- 0:(n-1)
## max(diff(x))
draw(x, fun1, 0.1, 0.01, wpar = 2*max(diff(x))) -> drw
## draw(x, fun2, 0.1, 0.01, wpar=1/(2*max(diff(x)))) -> drw
## draw(x, fun3, 0.1, 0.01) -> drw
## draw(x, fun4, 0.1, 0.01, wpar = 2*max(diff(x))) -> drw
## draw(x, fun5, 0.1, 0.01, wpar = c(2*max(diff(x)),2)) -> drw
## draw(x, fun6, 0.1, 0.01, wpar=1) -> drw
##
## drw$eig$values
##
## par(mfrow=c(1,1))
m <- c(1,2,3,5)
ylim <- max(abs(drw$eig$vectors[,m]),abs(drw$scr[,m])) * c(-1,1)
par(mfrow=c(4,1), mar=c(4.1,4.1,0.5,0.5))
for(i in m) {
plot(x = drw$ss, y = drw$scr[,i], type = "l", ylim = ylim, las = 1L, ylab="",
xlab="")
points(x = drw$x, y = drw$eig$vectors[,i])
}
## x <- 0:(n-1)
## max(diff(x))
draw(x, fun1, 0.1, 0.01, TRUE, wpar = 2*max(diff(x))) -> drw
## draw(x, fun2, 0.1, 0.01, wpar=1/(2*max(diff(x)))) -> drw
## draw(x, fun3, 0.1, 0.01) -> drw
## draw(x, fun4, 0.1, 0.01, wpar = 2*max(diff(x))) -> drw
## draw(x, fun5, 0.1, 0.01, wpar = c(2*max(diff(x)),2)) -> drw
## draw(x, fun6, 0.1, 0.01, wpar=1) -> drw
##
## drw$eig$values
##
## par(mfrow=c(1,1))
m <- c(1,2,3,5)
ylim <- max(abs(drw$eig$vectors[,m]),abs(drw$scr[,m])) * c(-1,1)
par(mfrow=c(4,1), mar=c(4.1,4.1,0.5,0.5))
for(i in m) {
plot(x = drw$ss, y = drw$scr[,i], type = "l", ylim = ylim, las = 1L, ylab="",
xlab="")
points(x = drw$x, y = drw$eig$vectors[,i])
}
##
drw$w -> w
sum(w) -> sw
diag(w) <- 0
sum(w) -> sw0
g <- t(t(w - rowMeans(w)) - colMeans(w)) + mean(w)
eigen(g) -> eig
eig$vectors <- eig$vectors[,abs(eig$values) > .Machine$double.eps^0.5]
eig$values <- eig$values[abs(eig$values) > .Machine$double.eps^0.5]
##
cbind(drw$eig$values, drw$eig$values - 1, eig$values)
drw$eig$values
##
draw <- function(x, fun, ext, by, ..., d0w0 = FALSE,
tol = .Machine$double.eps^0.5) {
d <- dist(x)
w <- as.matrix(d)
w[] <- fun(w[], ...)
if(d0w0)
w[d==0] <- 0
print(w)
g <- t(t(w - rowMeans(w)) - colMeans(w)) + mean(w)
eigen(g) -> eig
eig$vectors <- eig$vectors[,abs(eig$values) > tol]
eig$values <- eig$values[abs(eig$values) > tol]
##
seq(min(x) - ext, max(x) + ext, by) -> ss
t(sapply(ss, function(x, y) abs(x - y), y = x)) -> dd
ww <- dd
ww[] <- fun(ww[], ...)
if(d0w0)
ww[dd==0] <- 0
gg <- t(t(ww - rowMeans(ww)) - colMeans(w)) + mean(w)
gg %*% eig$vectors %*% diag(eig$values^(-1)) -> scr
##
list(x = x, eig = eig, ss = ss, scr = scr, w = w)
}
##
n <- 10
x <- c(0, cumsum(runif(n - 1L, 0.5, 1.5)))
## x <- 0:(n-1)
## max(diff(x))
draw(x, fun1, 0.1, 0.01, TRUE, wpar = 2*max(diff(x))) -> drw
##
draw <- function(x, fun, ext, by, ..., d0w0 = FALSE,
tol = .Machine$double.eps^0.5) {
d <- dist(x)
w <- as.matrix(d)
w[] <- fun(w[], ...)
if(d0w0)
diag(w) <- 0
print(w)
g <- t(t(w - rowMeans(w)) - colMeans(w)) + mean(w)
eigen(g) -> eig
eig$vectors <- eig$vectors[,abs(eig$values) > tol]
eig$values <- eig$values[abs(eig$values) > tol]
##
seq(min(x) - ext, max(x) + ext, by) -> ss
t(sapply(ss, function(x, y) abs(x - y), y = x)) -> dd
ww <- dd
ww[] <- fun(ww[], ...)
if(d0w0)
ww[dd==0] <- 0
gg <- t(t(ww - rowMeans(ww)) - colMeans(w)) + mean(w)
gg %*% eig$vectors %*% diag(eig$values^(-1)) -> scr
##
list(x = x, eig = eig, ss = ss, scr = scr, w = w)
}
##
n <- 10
x <- c(0, cumsum(runif(n - 1L, 0.5, 1.5)))
## x <- 0:(n-1)
## max(diff(x))
draw(x, fun1, 0.1, 0.01, TRUE, wpar = 2*max(diff(x))) -> drw
## x <- 0:(n-1)
## max(diff(x))
draw(x, fun1, 0.1, 0.01, TRUE, wpar = 2*max(diff(x))) -> drw
##
draw <- function(x, fun, ext, by, ..., d0w0 = FALSE,
tol = .Machine$double.eps^0.5) {
d <- dist(x)
w <- as.matrix(d)
w[] <- fun(w[], ...)
if(d0w0)
diag(w) <- 0
print(w)
g <- t(t(w - rowMeans(w)) - colMeans(w)) + mean(w)
eigen(g) -> eig
eig$vectors <- eig$vectors[,abs(eig$values) > tol]
eig$values <- eig$values[abs(eig$values) > tol]
##
seq(min(x) - ext, max(x) + ext, by) -> ss
t(sapply(ss, function(x, y) abs(x - y), y = x)) -> dd
ww <- dd
ww[] <- fun(ww[], ...)
if(d0w0)
ww[dd==0] <- 0
gg <- t(t(ww - rowMeans(ww)) - colMeans(w)) + mean(w)
gg %*% eig$vectors %*% diag(eig$values^(-1)) -> scr
##
list(x = x, eig = eig, ss = ss, scr = scr, w = w)
}
##
n <- 10
x <- c(0, cumsum(runif(n - 1L, 0.5, 1.5)))
## x <- 0:(n-1)
## max(diff(x))
draw(x, fun1, 0.1, 0.01, TRUE, wpar = 2*max(diff(x))) -> drw
## x <- 0:(n-1)
## max(diff(x))
draw(x, fun1, 0.1, 0.01, d0w0 = TRUE, wpar = 2*max(diff(x))) -> drw
m <- c(1,2,3,5)
ylim <- max(abs(drw$eig$vectors[,m]),abs(drw$scr[,m])) * c(-1,1)
par(mfrow=c(4,1), mar=c(4.1,4.1,0.5,0.5))
for(i in m) {
plot(x = drw$ss, y = drw$scr[,i], type = "l", ylim = ylim, las = 1L, ylab="",
xlab="")
points(x = drw$x, y = drw$eig$vectors[,i])
}
##
n <- 10
x <- round(c(0, cumsum(runif(n - 1L, 0.5, 1.5))),2)
x
##
n <- 10
x <- round(c(0, cumsum(runif(n - 1L, 0.5, 1.5))),2)
## x <- 0:(n-1)
## max(diff(x))
draw(x, fun1, 0.1, 0.01, d0w0 = TRUE, wpar = 2*max(diff(x))) -> drw
## draw(x, fun2, 0.1, 0.01, wpar=1/(2*max(diff(x)))) -> drw
## draw(x, fun3, 0.1, 0.01) -> drw
## draw(x, fun4, 0.1, 0.01, wpar = 2*max(diff(x))) -> drw
## draw(x, fun5, 0.1, 0.01, wpar = c(2*max(diff(x)),2)) -> drw
## draw(x, fun6, 0.1, 0.01, wpar=1) -> drw
##
## drw$eig$values
##
## par(mfrow=c(1,1))
m <- c(1,2,3,5)
ylim <- max(abs(drw$eig$vectors[,m]),abs(drw$scr[,m])) * c(-1,1)
par(mfrow=c(4,1), mar=c(4.1,4.1,0.5,0.5))
for(i in m) {
plot(x = drw$ss, y = drw$scr[,i], type = "l", ylim = ylim, las = 1L, ylab="",
xlab="")
points(x = drw$x, y = drw$eig$vectors[,i])
}
## x <- 0:(n-1)
## max(diff(x))
draw(x, fun1, 0.1, 0.01, d0w0 = FALSE, wpar = 2*max(diff(x))) -> drw
## draw(x, fun2, 0.1, 0.01, wpar=1/(2*max(diff(x)))) -> drw
## draw(x, fun3, 0.1, 0.01) -> drw
## draw(x, fun4, 0.1, 0.01, wpar = 2*max(diff(x))) -> drw
## draw(x, fun5, 0.1, 0.01, wpar = c(2*max(diff(x)),2)) -> drw
## draw(x, fun6, 0.1, 0.01, wpar=1) -> drw
##
## drw$eig$values
##
## par(mfrow=c(1,1))
m <- c(1,2,3,5)
ylim <- max(abs(drw$eig$vectors[,m]),abs(drw$scr[,m])) * c(-1,1)
par(mfrow=c(4,1), mar=c(4.1,4.1,0.5,0.5))
for(i in m) {
plot(x = drw$ss, y = drw$scr[,i], type = "l", ylim = ylim, las = 1L, ylab="",
xlab="")
points(x = drw$x, y = drw$eig$vectors[,i])
}
##
draw <- function(x, fun, ext, by, ..., d0w0 = FALSE,
tol = .Machine$double.eps^0.5) {
d <- dist(x)
w <- as.matrix(d)
w[] <- fun(w[], ...)
if(d0w0)
diag(w) <- 0
print(w)
g <- t(t(w - rowMeans(w)) - colMeans(w)) + mean(w)
eigen(g) -> eig
eig$vectors <- eig$vectors[,abs(eig$values) > tol]
eig$values <- eig$values[abs(eig$values) > tol]
##
seq(min(x) - ext, max(x) + ext, by) -> ss
t(sapply(ss, function(x, y) abs(x - y), y = x)) -> dd
ww <- dd
ww[] <- fun(ww[], ...)
if(d0w0)
ww[dd==0] <- 0
gg <- t(t(ww - rowMeans(ww)) - colMeans(w)) + mean(w)
gg %*% eig$vectors %*% diag(eig$values^(-1)) -> scr
##
list(x = x, eig = eig, ss = ss, scr = scr, w = w)
}
##
n <- 10
x <- round(c(0, cumsum(runif(n - 1L, 0.5, 1.5))),2)
## x <- 0:(n-1)
## max(diff(x))
draw(x, fun1, 0.1, 0.01, wpar = 2*max(diff(x))) -> drw
## draw(x, fun2, 0.1, 0.01, wpar=1/(2*max(diff(x)))) -> drw
## draw(x, fun3, 0.1, 0.01) -> drw
## draw(x, fun4, 0.1, 0.01, wpar = 2*max(diff(x))) -> drw
## draw(x, fun5, 0.1, 0.01, wpar = c(2*max(diff(x)),2)) -> drw
## draw(x, fun6, 0.1, 0.01, wpar=1) -> drw
##
## drw$eig$values
##
## par(mfrow=c(1,1))
m <- c(1,2,3,5)
ylim <- max(abs(drw$eig$vectors[,m]),abs(drw$scr[,m])) * c(-1,1)
par(mfrow=c(4,1), mar=c(4.1,4.1,0.5,0.5))
for(i in m) {
plot(x = drw$ss, y = drw$scr[,i], type = "l", ylim = ylim, las = 1L, ylab="",
xlab="")
points(x = drw$x, y = drw$eig$vectors[,i])
}
##
drw$w -> w
sum(w) -> sw
diag(w) <- 0
sum(w) -> sw0
g <- t(t(w - rowMeans(w)) - colMeans(w)) + mean(w)
eigen(g) -> eig
eig$vectors <- eig$vectors[,abs(eig$values) > .Machine$double.eps^0.5]
eig$values <- eig$values[abs(eig$values) > .Machine$double.eps^0.5]
##
cbind(drw$eig$values, drw$eig$values - 1, eig$values)
drw$eig$values
cbind(Moran = eig$values*n/sw0, recalculated = (drw$eig$values - 1)*n/(sw - n))
eig$vectors - drw$eig$vectors
eig$vectors
sign(drw$eig$vectors[1L,])
sign(drw$eig$vectors[1L,]
)
sign(eig$vectors[1L,])
sign(drw$eig$vectors[1L,]) != sign(eig$vectors[1L,])
eig$vectors[,sign(drw$eig$vectors[1L,]) != sign(eig$vectors[1L,])]
sel <- which(sign(drw$eig$vectors[1L,]) != sign(eig$vectors[1L,]))
sel <- which(sign(drw$eig$vectors[1L,]) != sign(eig$vectors[1L,]))
eig$vectors[,sel] <- -1 * eig$vectors[,sel]
which(sign(drw$eig$vectors[1L,]) != sign(eig$vectors[1L,]))
eig$vectors - drw$eig$vectors
round(eig$vectors - drw$eig$vectors,8)
all(round(eig$vectors - drw$eig$vectors,8) == 0)
rm(sel)
drw$w -> w
sum(w) -> sw
diag(w) <- 0
sum(w) -> sw0
g <- t(t(w - rowMeans(w)) - colMeans(w)) + mean(w)
eigen(g) -> eig
eig$vectors <- eig$vectors[,abs(eig$values) > .Machine$double.eps^0.5]
eig$values <- eig$values[abs(eig$values) > .Machine$double.eps^0.5]
##
cbind(drw$eig$values, drw$eig$values - 1, eig$values)
drw$eig$values
##
cbind(drw$eig$values, drw$eig$values - 1, eig$values)
cbind(Moran = eig$values*n/sw0, recalculated = (drw$eig$values - 1)*n/(sw - n))
round(eig$vectors - drw$eig$vectors,8) == 0
all((round(eig$vectors - drw$eig$vectors,8) == 0) & (round(eig$vectors + drw$eig$vectors,8) == 0))
all((round(eig$vectors - drw$eig$vectors,8) == 0) | (round(eig$vectors + drw$eig$vectors,8) == 0))
rm(sel)
m <- c(1,2,3,5)
ylim <- max(abs(drw$eig$vectors[,m]),abs(drw$scr[,m])) * c(-1,1)
par(mfrow=c(4,1), mar=c(4.1,4.1,0.5,0.5))
for(i in m) {
plot(x = drw$ss, y = drw$scr[,i], type = "l", ylim = ylim, las = 1L, ylab="",
xlab="")
abline(h = 0, lty = 3L)
points(x = drw$x, y = drw$eig$vectors[,i])
}
drw$ss
drw$scr
colSums(drw$scr)
##
draw <- function(x, fun, ext, by, ..., d0w0 = FALSE,
tol = .Machine$double.eps^0.5) {
n <- NROW(x)
d <- dist(x)
w <- as.matrix(d)
w[] <- fun(w[], ...)
if(d0w0)
diag(w) <- 0
sw <- sum(w)
g <- t(t(w - rowMeans(w)) - colMeans(w)) + mean(w)
eigen(g) -> eig
eig$vectors <- eig$vectors[,abs(eig$values) > tol]
eig$values <- eig$values[abs(eig$values) > tol]
I <- (eig$values - 1)*n/(sw - n)
##
seq(min(x) - ext, max(x) + ext, by) -> ss
t(sapply(ss, function(x, y) abs(x - y), y = x)) -> dd
ww <- dd
ww[] <- fun(ww[], ...)
if(d0w0)
ww[dd==0] <- 0
gg <- t(t(ww - rowMeans(ww)) - colMeans(w)) + mean(w)
gg %*% eig$vectors %*% diag(eig$values^(-1)) -> scr
##
list(x = x, eig = eig, ss = ss, scr = scr, w = w, I = I)
}
##
n <- 10
x <- round(c(0, cumsum(runif(n - 1L, 0.5, 1.5))),2)
## x <- 0:(n-1)
## max(diff(x))
draw(x, fun1, 0.1, 0.01, wpar = 2*max(diff(x))) -> drw
## draw(x, fun2, 0.1, 0.01, wpar=1/(2*max(diff(x)))) -> drw
## draw(x, fun3, 0.1, 0.01) -> drw
## draw(x, fun4, 0.1, 0.01, wpar = 2*max(diff(x))) -> drw
## draw(x, fun5, 0.1, 0.01, wpar = c(2*max(diff(x)),2)) -> drw
## draw(x, fun6, 0.1, 0.01, wpar=1) -> drw
##
## drw$eig$values
##
## par(mfrow=c(1,1))
m <- c(1,2,3,5)
ylim <- max(abs(drw$eig$vectors[,m]),abs(drw$scr[,m])) * c(-1,1)
par(mfrow=c(4,1), mar=c(4.1,4.1,0.5,0.5))
for(i in m) {
plot(x = drw$ss, y = drw$scr[,i], type = "l", ylim = ylim, las = 1L, ylab="",
xlab="")
abline(h = 0, lty = 3L)
points(x = drw$x, y = drw$eig$vectors[,i])
}
##
drw$w -> w
sum(w) -> sw
diag(w) <- 0
sum(w) -> sw0
g <- t(t(w - rowMeans(w)) - colMeans(w)) + mean(w)
eigen(g) -> eig
eig$vectors <- eig$vectors[,abs(eig$values) > .Machine$double.eps^0.5]
eig$values <- eig$values[abs(eig$values) > .Machine$double.eps^0.5]
##
cbind(drw$eig$values, drw$eig$values - 1, eig$values, drw$I)
cbind(Moran = eig$values*n/sw0, recalculated = (drw$eig$values - 1)*n/(sw - n),
drw$I)
rm(sw)
##
drw$w -> w
diag(w) <- 0
sum(w) -> sw0
g <- t(t(w - rowMeans(w)) - colMeans(w)) + mean(w)
eigen(g) -> eig
eig$vectors <- eig$vectors[,abs(eig$values) > .Machine$double.eps^0.5]
eig$values <- eig$values[abs(eig$values) > .Machine$double.eps^0.5]
##
cbind(drw$eig$values, drw$eig$values - 1, eig$values)
cbind(Moran = eig$values*n/sw0, recalculated = drw$I)
all((round(eig$vectors - drw$eig$vectors,8) == 0) |
(round(eig$vectors + drw$eig$vectors,8) == 0))
drw$eig$values
drw$eig$values - 1
